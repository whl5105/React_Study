{"ast":null,"code":"var _jsxFileName = \"/Users/choi-suin/Desktop/\\u110F\\u1169\\u1103\\u1175\\u11BC \\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8 /React_Study/stateMangement/recoil/src/components/Recoil/Todo/TodoListFilters.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoListFilters() {\n  _s();\n\n  const [filter, setFilter] = useRecoilState(todoListFilterState);\n\n  const updateFilter = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setFilter(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Filter:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      value: filter,\n      onChange: updateFilter,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Show All\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Show Completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Show Uncompleted\",\n        children: \"Uncompleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoListFilters, \"wEtj/ycfWYs62FyMM+Zw6gYdvHs=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = TodoListFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListFilters\");","map":{"version":3,"sources":["/Users/choi-suin/Desktop/코딩 작업 /React_Study/stateMangement/recoil/src/components/Recoil/Todo/TodoListFilters.jsx"],"names":["useRecoilState","TodoListFilters","filter","setFilter","todoListFilterState","updateFilter","target","value"],"mappings":";;;AAAA,SAAQA,cAAR,QAA6B,QAA7B;;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,cAAc,CAACI,mBAAD,CAA1C;;AAEA,QAAMC,YAAY,GAAG,QAAuB;AAAA,QAAtB;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA;AAAD;AAAT,KAAsB;AAC1CJ,IAAAA,SAAS,CAACI,KAAD,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,uCAEE;AAAQ,MAAA,KAAK,EAAEL,MAAf;AAAuB,MAAA,QAAQ,EAAEG,YAAjC;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD;;GAjBQJ,e;UACqBD,c;;;KADrBC,e","sourcesContent":["import {useRecoilState} from \"recoil\";\n\nfunction TodoListFilters() {\n  const [filter, setFilter] = useRecoilState(todoListFilterState);\n\n  const updateFilter = ({target: {value}}) => {\n    setFilter(value);\n  };\n\n  return (\n    <>\n      Filter:\n      <select value={filter} onChange={updateFilter}>\n        <option value=\"Show All\">All</option>\n        <option value=\"Show Completed\">Completed</option>\n        <option value=\"Show Uncompleted\">Uncompleted</option>\n      </select>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}