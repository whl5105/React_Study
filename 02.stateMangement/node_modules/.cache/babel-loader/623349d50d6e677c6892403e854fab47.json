{"ast":null,"code":"import { atom, selector } from \"recoil\";\nexport const todoListState = atom({\n  key: \"todoListState\",\n  default: []\n});\nconst todoListFilterState = atom({\n  key: 'todoListFilterState',\n  default: 'Show All'\n});\nconst filteredTodoListState = selector({\n  key: 'filteredTodoListState',\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const filter = get(todoListFilterState);\n    const list = get(todoListState);\n\n    switch (filter) {\n      case 'Show Completed':\n        return list.filter(item => item.isComplete);\n\n      case 'Show Uncompleted':\n        return list.filter(item => !item.isComplete);\n\n      default:\n        return list;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/choi-suin/Desktop/코딩 작업 /React_Study/stateMangement/recoil/src/components/Recoil/Todo/TodoStore.js"],"names":["atom","selector","todoListState","key","default","todoListFilterState","filteredTodoListState","get","filter","list","item","isComplete"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AAEA,OAAO,MAAMC,aAAa,GAAGF,IAAI,CAAC;AAChCG,EAAAA,GAAG,EAAE,eAD2B;AAEhCC,EAAAA,OAAO,EAAE;AAFuB,CAAD,CAA1B;AAMP,MAAMC,mBAAmB,GAAGL,IAAI,CAAC;AAC/BG,EAAAA,GAAG,EAAE,qBAD0B;AAE/BC,EAAAA,OAAO,EAAE;AAFsB,CAAD,CAAhC;AAKA,MAAME,qBAAqB,GAAGL,QAAQ,CAAC;AACrCE,EAAAA,GAAG,EAAE,uBADgC;AAErCI,EAAAA,GAAG,EAAE,QAAW;AAAA,QAAV;AAACA,MAAAA;AAAD,KAAU;AACd,UAAMC,MAAM,GAAGD,GAAG,CAACF,mBAAD,CAAlB;AACA,UAAMI,IAAI,GAAGF,GAAG,CAACL,aAAD,CAAhB;;AAEA,YAAQM,MAAR;AACE,WAAK,gBAAL;AACE,eAAOC,IAAI,CAACD,MAAL,CAAaE,IAAD,IAAUA,IAAI,CAACC,UAA3B,CAAP;;AACF,WAAK,kBAAL;AACE,eAAOF,IAAI,CAACD,MAAL,CAAaE,IAAD,IAAU,CAACA,IAAI,CAACC,UAA5B,CAAP;;AACF;AACE,eAAOF,IAAP;AANJ;AAQD;AAdoC,CAAD,CAAtC","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport const todoListState = atom({\n  key: \"todoListState\",\n  default: [],\n});\n\n\nconst todoListFilterState = atom({\n  key: 'todoListFilterState',\n  default: 'Show All',\n});\n\nconst filteredTodoListState = selector({\n  key: 'filteredTodoListState',\n  get: ({get}) => {\n    const filter = get(todoListFilterState);\n    const list = get(todoListState);\n\n    switch (filter) {\n      case 'Show Completed':\n        return list.filter((item) => item.isComplete);\n      case 'Show Uncompleted':\n        return list.filter((item) => !item.isComplete);\n      default:\n        return list;\n    }\n  },\n});"]},"metadata":{},"sourceType":"module"}