{"ast":null,"code":"var _jsxFileName = \"/Users/choi-suin/Desktop/\\u110F\\u1169\\u1103\\u1175\\u11BC \\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8 /React_Study/stateMangement/recoil/src/components/Recoil/CharacterCounter.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useRecoilState } from \"recoil\";\nimport { textState } from \"./CounterStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CharacterCounter() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = CharacterCounter;\n\nfunction TextInput() {\n  _s();\n\n  const [text, setText] = useRecoilState(textState);\n\n  const onChange = event => {\n    setText(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \"Echo: \", text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextInput, \"1i/kHIp3rDetY/zlYu2P2+6MJo8=\", false, function () {\n  return [useRecoilState];\n});\n\n_c2 = TextInput;\n\nfunction CharacterCount() {\n  _s2();\n\n  const count = useRecoilValue(charCountState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Character Count: \", count]\n  }, void 0, true);\n}\n\n_s2(CharacterCount, \"h7IrvKR9DxGiGl6XcEa6dZeZPaU=\", true);\n\n_c3 = CharacterCount;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CharacterCounter\");\n$RefreshReg$(_c2, \"TextInput\");\n$RefreshReg$(_c3, \"CharacterCount\");","map":{"version":3,"sources":["/Users/choi-suin/Desktop/코딩 작업 /React_Study/stateMangement/recoil/src/components/Recoil/CharacterCounter.jsx"],"names":["useRecoilState","textState","CharacterCounter","TextInput","text","setText","onChange","event","target","value","CharacterCount","count","useRecoilValue","charCountState"],"mappings":";;;;AAAA,SAAQA,cAAR,QAA6B,QAA7B;AACA,SAAQC,SAAR,QAAwB,gBAAxB;;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AACzC,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;KAPuBA,gB;;AASxB,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,cAAc,CAACC,SAAD,CAAtC;;AAEA,QAAMK,QAAQ,GAAIC,KAAD,IAAW;AAC1BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEL,IAA1B;AAAgC,MAAA,QAAQ,EAAEE;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,YAGSF,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAdQD,S;UACiBH,c;;;MADjBG,S;;AAiBT,SAASO,cAAT,GAA0B;AAAA;;AACxB,QAAMC,KAAK,GAAGC,cAAc,CAACC,cAAD,CAA5B;AAEA,sBAAO;AAAA,oCAAoBF,KAApB;AAAA,kBAAP;AACD;;IAJQD,c;;MAAAA,c","sourcesContent":["import {useRecoilState} from \"recoil\";\nimport {textState} from \"./CounterStore\";\n\nexport default function CharacterCounter() {\n  return (\n    <div>\n      <TextInput />\n      {/* <CharacterCount /> */}\n    </div>\n  );\n}\n\nfunction TextInput() {\n  const [text, setText] = useRecoilState(textState);\n\n  const onChange = (event) => {\n    setText(event.target.value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={text} onChange={onChange} />\n      <br />\n      Echo: {text}\n    </div>\n  );\n}\n\n\nfunction CharacterCount() {\n  const count = useRecoilValue(charCountState);\n\n  return <>Character Count: {count}</>;\n}"]},"metadata":{},"sourceType":"module"}