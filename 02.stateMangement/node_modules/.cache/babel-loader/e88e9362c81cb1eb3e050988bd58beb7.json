{"ast":null,"code":"var _jsxFileName = \"/Users/choi-suin/Desktop/\\u110F\\u1169\\u1103\\u1175\\u11BC \\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8 /React_Study/02.stateMangement/src/components/Recoil/CurrentUserInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { atom, selector, useRecoilState, useRecoilValue, selectorFamily } from \"recoil\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentUserIDState = atom({\n  key: 'CurrentUserID',\n  default: 1\n}); //임시 테이블 \n\nconst tableOfUsers = [{\n  name: \"suin\"\n}, {\n  name: \"inin\"\n}]; //동기 \n// const currentUserNameState = selector({\n//   key: 'CurrentUserName',\n//   get: ({get}) => {\n//     return tableOfUsers[get(currentUserIDState)].name;\n//   },\n// });\n//비동기\n// const currentUserNameQuery = selector({\n//   key: 'CurrentUserName',\n//   get: async ({get}) => {\n//     const response = await axios.get(`/api/user-name?id=${get(currentUserIDState)}`);\n//     return response.data.name;\n//   },\n// });\n//selectorFamily\n\nconst currentUserNameQuery = selectorFamily({\n  key: 'CurrentUserName',\n  get: id => async () => {\n    const response = await axios.get(`/api/user-name?id=${id}`);\n    return response.data.name;\n  }\n}); // Error Handling (에러 처리하기)\n\nfunction CurrentUser() {\n  _s();\n\n  // const userName = useRecoilValue(currentUserNameState);\n  // const userName = useRecoilValue(currentUserNameQuery);\n  // const userName = useRecoilValue(currentUserNameQuery(1));\n  const userName = useRecoilValue(currentUserNameQuery(1)); // const [id,setId] = useRecoilState(currentUserIDState);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n} //Queries with Parameters (매개변수가 있는 쿼리)\n\n\n_s(CurrentUser, \"HbZNlrqrrl4LqZeLLen7QM6UBjE=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = CurrentUser;\nexport default function CurrentUserInfo() {\n  return (\n    /*#__PURE__*/\n    // Error Handling (에러 처리하기)\n    _jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(React.Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 35\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(CurrentUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  );\n}\n_c2 = CurrentUserInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CurrentUser\");\n$RefreshReg$(_c2, \"CurrentUserInfo\");","map":{"version":3,"sources":["/Users/choi-suin/Desktop/코딩 작업 /React_Study/02.stateMangement/src/components/Recoil/CurrentUserInfo.jsx"],"names":["axios","React","atom","selector","useRecoilState","useRecoilValue","selectorFamily","ErrorBoundary","currentUserIDState","key","default","tableOfUsers","name","currentUserNameQuery","get","id","response","data","CurrentUser","userName","CurrentUserInfo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,cAAzB,EAAyCC,cAAzC,EAAyDC,cAAzD,QAA8E,QAA9E;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,kBAAkB,GAAGN,IAAI,CAAC;AAC9BO,EAAAA,GAAG,EAAE,eADyB;AAE9BC,EAAAA,OAAO,EAAE;AAFqB,CAAD,CAA/B,C,CAKA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAAN,CAAD,EAAgB;AAACA,EAAAA,IAAI,EAAC;AAAN,CAAhB,CAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,MAAMC,oBAAoB,GAAGP,cAAc,CAAC;AAC1CG,EAAAA,GAAG,EAAE,iBADqC;AAE1CK,EAAAA,GAAG,EAAEC,EAAD,IAAO,YAAY;AACrB,UAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACc,GAAN,CAAW,qBAAoBC,EAAG,EAAlC,CAAvB;AACA,WAAOC,QAAQ,CAACC,IAAT,CAAcL,IAArB;AACD;AALyC,CAAD,CAA3C,C,CAQA;;AACA,SAASM,WAAT,GAAuB;AAAA;;AACnB;AACA;AACA;AACA,QAAMC,QAAQ,GAAGd,cAAc,CAACQ,oBAAoB,CAAC,CAAD,CAArB,CAA/B,CAJmB,CAKnB;;AACA,sBACE;AAAA,cACCM;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAWH,C,CAED;;;GAnBSD,W;UAIYb,c;;;KAJZa,W;AAoBT,eAAe,SAASE,eAAT,GAA2B;AACtC;AAAA;AACE;AACA,YAAC,aAAD;AAAA,6BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAQH;MATuBA,e","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { atom, selector, useRecoilState, useRecoilValue ,selectorFamily} from \"recoil\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nconst currentUserIDState = atom({\n  key: 'CurrentUserID',\n  default: 1,\n});\n\n//임시 테이블 \nconst tableOfUsers = [{name:\"suin\"}, {name:\"inin\"}];\n\n//동기 \n// const currentUserNameState = selector({\n//   key: 'CurrentUserName',\n//   get: ({get}) => {\n//     return tableOfUsers[get(currentUserIDState)].name;\n//   },\n// });\n\n//비동기\n// const currentUserNameQuery = selector({\n//   key: 'CurrentUserName',\n//   get: async ({get}) => {\n//     const response = await axios.get(`/api/user-name?id=${get(currentUserIDState)}`);\n//     return response.data.name;\n//   },\n// });\n\n\n//selectorFamily\nconst currentUserNameQuery = selectorFamily({\n  key: 'CurrentUserName',\n  get:(id)=> async () => {\n    const response = await axios.get(`/api/user-name?id=${id}`);\n    return response.data.name;\n  },\n});\n\n// Error Handling (에러 처리하기)\nfunction CurrentUser() {\n    // const userName = useRecoilValue(currentUserNameState);\n    // const userName = useRecoilValue(currentUserNameQuery);\n    // const userName = useRecoilValue(currentUserNameQuery(1));\n    const userName = useRecoilValue(currentUserNameQuery(1));\n    // const [id,setId] = useRecoilState(currentUserIDState);\n    return (\n      <div>\n      {userName}\n      {/* <input \n      type=\"text\" \n      value={id} \n      onChange={(e)=>{\n        setId(e.target.value);\n      }} /> */}\n    </div>\n    )\n}\n\n//Queries with Parameters (매개변수가 있는 쿼리)\nexport default function CurrentUserInfo() {\n    return(\n      // Error Handling (에러 처리하기)\n      <ErrorBoundary>\n        <React.Suspense fallback={<div>Loading...</div>}>\n          <CurrentUser />\n        </React.Suspense>\n      </ErrorBoundary> \n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}