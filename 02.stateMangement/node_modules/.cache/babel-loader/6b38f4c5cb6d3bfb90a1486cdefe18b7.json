{"ast":null,"code":"var _jsxFileName = \"/Users/choi-suin/Desktop/\\u110F\\u1169\\u1103\\u1175\\u11BC \\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8 /React_Study/stateMangement/recoil/src/components/Recoil/Todo/TodoListCreator.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSetRecoilState } from \"recoil\";\nimport { todoListState } from \"./TodoStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoItemCreator() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [inputValue, setInputValue] = useState('');\n  const setTodoList = useSetRecoilState(todoListState);\n\n  const addItem = () => {\n    _s();\n\n    setTodoList(oldTodoList => [...oldTodoList, {\n      id: getId(),\n      text: inputValue,\n      isComplete: false\n    }]);\n    const setTodoList = useSetRecoilState(todoListState);\n    console.log();\n    setInputValue('');\n  };\n\n  _s(addItem, \"H4AvzU46ytP2tNciPmVVoGHrEoA=\", false, function () {\n    return [useSetRecoilState];\n  });\n\n  const onChange = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setInputValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n} // 고유한 Id 생성을 위한 유틸리티\n\n_s2(TodoItemCreator, \"gvrCM0Rx032ow4M2LLvenE72TyU=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = TodoItemCreator;\nlet id = 0;\n\nfunction getId() {\n  return id++;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItemCreator\");","map":{"version":3,"sources":["/Users/choi-suin/Desktop/코딩 작업 /React_Study/stateMangement/recoil/src/components/Recoil/Todo/TodoListCreator.jsx"],"names":["React","useState","useSetRecoilState","todoListState","TodoItemCreator","inputValue","setInputValue","setTodoList","addItem","oldTodoList","id","getId","text","isComplete","console","log","onChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,iBAAR,QAAgC,QAAhC;AACA,SAAQC,aAAR,QAA4B,aAA5B;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAAA;;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMM,WAAW,GAAGL,iBAAiB,CAACC,aAAD,CAArC;;AAEA,QAAMK,OAAO,GAAG,MAAM;AAAA;;AACpBD,IAAAA,WAAW,CAAEE,WAAD,IAAiB,CAC3B,GAAGA,WADwB,EAE3B;AACEC,MAAAA,EAAE,EAAEC,KAAK,EADX;AAEEC,MAAAA,IAAI,EAAEP,UAFR;AAGEQ,MAAAA,UAAU,EAAE;AAHd,KAF2B,CAAlB,CAAX;AAQF,UAAMN,WAAW,GAAGL,iBAAiB,CAACC,aAAD,CAArC;AACAW,IAAAA,OAAO,CAACC,GAAR;AACET,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAZD;;AAJwC,KAIlCE,OAJkC;AAAA,YAapBN,iBAboB;AAAA;;AAkBxC,QAAMc,QAAQ,GAAG,QAAuB;AAAA,QAAtB;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA;AAAD;AAAT,KAAsB;AACtCZ,IAAAA,aAAa,CAACY,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEb,UAA1B;AAAsC,MAAA,QAAQ,EAAEW;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAER,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CAED;;IA9BwBJ,e;UAEFF,iB;;;KAFEE,e;AA+BxB,IAAIM,EAAE,GAAG,CAAT;;AACA,SAASC,KAAT,GAAiB;AACf,SAAOD,EAAE,EAAT;AACD","sourcesContent":["import React,{useState} from 'react';\nimport {useSetRecoilState} from \"recoil\";\nimport {todoListState} from \"./TodoStore\";\n\nexport default function TodoItemCreator() {\n  const [inputValue, setInputValue] = useState('');\n  const setTodoList = useSetRecoilState(todoListState);\n\n  const addItem = () => {\n    setTodoList((oldTodoList) => [\n      ...oldTodoList,\n      {\n        id: getId(),\n        text: inputValue,\n        isComplete: false,\n      },\n    ]);\n  const setTodoList = useSetRecoilState(todoListState);\n  console.log()\n    setInputValue('');\n  };\n\n  const onChange = ({target: {value}}) => {\n    setInputValue(value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputValue} onChange={onChange} />\n      <button onClick={addItem}>Add</button>\n    </div>\n  );\n}\n\n// 고유한 Id 생성을 위한 유틸리티\nlet id = 0;\nfunction getId() {\n  return id++;\n}"]},"metadata":{},"sourceType":"module"}