{"ast":null,"code":"var _jsxFileName = \"/Users/choi-suin/Desktop/\\u110F\\u1169\\u1103\\u1175\\u11BC \\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8 /React_Study/stateMangement/src/components/Recoil/ErrorBoundary.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 다음 렌더링에서 폴백 UI가 보이도록 상태를 업데이트 합니다.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {// 에러 리포팅 서비스에 에러를 기록할 수도 있습니다.\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // 폴백 UI를 커스텀하여 렌더링할 수 있습니다.\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Something went wrong. \\uC5D0\\uB7EC\\uBC1C\\uC0DD \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}","map":{"version":3,"sources":["/Users/choi-suin/Desktop/코딩 작업 /React_Study/stateMangement/src/components/Recoil/ErrorBoundary.jsx"],"names":["React","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAE8B,SAAxBC,wBAAwB,CAACC,KAAD,EAAQ;AACrC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAmB,CAClC;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKN,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAO,KAAKF,KAAL,CAAWQ,QAAlB;AACD;;AAvBwD","sourcesContent":["import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 다음 렌더링에서 폴백 UI가 보이도록 상태를 업데이트 합니다.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // 에러 리포팅 서비스에 에러를 기록할 수도 있습니다.\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // 폴백 UI를 커스텀하여 렌더링할 수 있습니다.\n      return <h1>Something went wrong. 에러발생 </h1>;\n    }\n\n    return this.props.children;\n  }\n}"]},"metadata":{},"sourceType":"module"}